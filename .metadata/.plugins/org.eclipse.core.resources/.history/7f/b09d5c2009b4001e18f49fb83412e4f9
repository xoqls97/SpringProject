package com.myweb.www.service;

import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.myweb.www.repository.CommentDAO;
import com.myweb.www.repository.MemberDAO;
import com.myweb.www.security.MemberVO;

import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;

@RequiredArgsConstructor
@Slf4j
@Service
public class MemberServiceImpl implements MemberService {
	private final MemberDAO mdao;

	@Transactional
	@Override
	public int register(MemberVO mvo) {
		
		int isOk=mdao.register(mvo);
		return mdao.insertAuthInit(mvo.getEmail());
	}

	@Override
	public boolean updateLastLogin(String authEmail) {
		return mdao.updateLastLogin(authEmail) >0 ? true : false;
	}

	@Transactional
	@Override
	public MemberVO modify(String email) {
		MemberVO modifiedMember = mdao.modify(email);
		if (modifiedMember != null) {
            mdao.insertAuthInit(modifiedMember.getEmail());
        }
		return ;
	}

}
